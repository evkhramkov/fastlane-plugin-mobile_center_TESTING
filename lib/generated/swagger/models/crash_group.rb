# encoding: utf-8
# Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.

module Swagger
  module Models
    #
    # Model object.
    #
    #
    class CrashGroup
      # @return [String]
      attr_accessor :crash_group_id

      # @return [String]
      attr_accessor :display_id

      # @return [String]
      attr_accessor :app_version

      # @return [String]
      attr_accessor :build

      # @return [Enum] Possible values include: 'open', 'closed', 'ignored'
      attr_accessor :status

      # @return [Integer]
      attr_accessor :count

      # @return [Integer]
      attr_accessor :impacted_users

      # @return [DateTime]
      attr_accessor :first_occurrence

      # @return [DateTime]
      attr_accessor :last_occurrence

      # @return [String]
      attr_accessor :exception

      # @return [String]
      attr_accessor :error_reason

      # @return [ReasonStackFrame]
      attr_accessor :reason_frame

      # @return [Boolean] Crash or handled exception
      attr_accessor :fatal

      # @return [String]
      attr_accessor :annotation


      #
      # Mapper for CrashGroup class as Ruby Hash.
      # This will be used for serialization/deserialization.
      #
      def self.mapper()
        {
          required: false,
          serialized_name: 'CrashGroup',
          type: {
            name: 'Composite',
            class_name: 'CrashGroup',
            model_properties: {
              crash_group_id: {
                required: true,
                serialized_name: 'crash_group_id',
                type: {
                  name: 'String'
                }
              },
              display_id: {
                required: true,
                serialized_name: 'display_id',
                type: {
                  name: 'String'
                }
              },
              app_version: {
                required: true,
                serialized_name: 'app_version',
                type: {
                  name: 'String'
                }
              },
              build: {
                required: true,
                serialized_name: 'build',
                type: {
                  name: 'String'
                }
              },
              status: {
                required: true,
                serialized_name: 'status',
                type: {
                  name: 'String'
                }
              },
              count: {
                required: true,
                serialized_name: 'count',
                type: {
                  name: 'Number'
                }
              },
              impacted_users: {
                required: false,
                serialized_name: 'impacted_users',
                type: {
                  name: 'Number'
                }
              },
              first_occurrence: {
                required: true,
                serialized_name: 'first_occurrence',
                type: {
                  name: 'DateTime'
                }
              },
              last_occurrence: {
                required: true,
                serialized_name: 'last_occurrence',
                type: {
                  name: 'DateTime'
                }
              },
              exception: {
                required: false,
                serialized_name: 'exception',
                type: {
                  name: 'String'
                }
              },
              error_reason: {
                required: true,
                serialized_name: 'error_reason',
                type: {
                  name: 'String'
                }
              },
              reason_frame: {
                required: false,
                serialized_name: 'reason_frame',
                type: {
                  name: 'Composite',
                  class_name: 'ReasonStackFrame'
                }
              },
              fatal: {
                required: true,
                serialized_name: 'fatal',
                type: {
                  name: 'Boolean'
                }
              },
              annotation: {
                required: true,
                serialized_name: 'annotation',
                type: {
                  name: 'String'
                }
              }
            }
          }
        }
      end
    end
  end
end
